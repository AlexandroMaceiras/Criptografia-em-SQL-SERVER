CREATE TABLE [dbo].[ExemploCripto1]
(
    Id int primary key identity(1,1),
    Nome varchar(255),
    Preco decimal(10,2),
    Quantidade int,

    RowHash as hashbytes('SHA2_512', CONCAT(    UPPER(COALESCE(Nome, '')), '|'
                                                , COALESCE(CONVERT(VARCHAR(50), Preco), ''), '|'
                                                , COALESCE(CONVERT(VARCHAR(20), Quantidade), ''), '|'
                                                )) persisted
) 

Mude SHA2_512 para MD5, SHA2_256 ou SHA1 para usar estes outros tipos de criptografia.

CREATE TABLE [dbo].[ExemploCripto2]
(
    Id int primary key identity(1,1),
    Senha varchar(255)

    RowHash as hashbytes('MD5', UPPER(COALESCE(Senha, ''))) persisted
) 

Para criptografar e/ou descriptografar usando Base64

CREATE FUNCTION [dbo].[fncBase64_Encode] (
    @string VARCHAR(MAX)
) 
RETURNS VARCHAR(MAX)
AS BEGIN
 
    DECLARE 
        @source VARBINARY(MAX), 
        @encoded VARCHAR(MAX)
        
    SET @source = CONVERT(VARBINARY(MAX), @string)
    SET @encoded = CAST('' AS XML).value('xs:base64Binary(sql:variable("@source"))', 'varchar(max)')
 
    RETURN @encoded
 
END

Exemplo de utilização:
SELECT dbo.fncBase64_Encode('Bem vindo ao Blog') -- Irá retornar: QmVtIHZpbmRvIGFvIEJsb2c=

Descriptografando uma string
Para descriptografar uma string, vamos utilizar a função fncBase64_Decode:

CREATE FUNCTION [dbo].[fncBase64_Decode] (
    @string VARCHAR(MAX)
)
RETURNS VARCHAR(MAX)
AS BEGIN

    DECLARE @decoded VARCHAR(MAX)
    SET @decoded = CAST('' AS XML).value('xs:base64Binary(sql:variable("@string"))', 'varbinary(max)')

    RETURN CONVERT(VARCHAR(MAX), @decoded)
	
END

Exemplo de utilização:
SELECT dbo.fncBase64_Decode('Vm9sdGVtIHNlbXByZSE=') -- Irá retornar: Voltem sempre!
